# .github/workflows/deploy.yml

name: CI/CD - Deploy Config Server

on:
  push:
    branches: [ "main" ]
  workflow_dispatch: # Actions 탭에서 수동으로 실행할 수 있는 버튼 추가

jobs:
  # --- 첫 번째 잡: Docker 이미지 빌드 및 Docker Hub에 푸시 ---
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      # 1. 소스 코드 가져오기
      - name: Checkout source code
        uses: actions/checkout@v3

      # 2. Docker Hub 로그인
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }} # Docker Hub 토큰 시크릿

      # 3. Docker 이미지 빌드 및 푸시
      - name: Build and push config-server
        uses: docker/build-push-action@v4
        with:
          context: . # 현재 프로젝트 폴더를 기준으로 빌드
          file: ./Dockerfile # 프로젝트 루트의 Dockerfile 사용
          push: true
          tags: minkeon44883/config-server:latest # 본인 ID/이미지 이름 형식으로 수정하세요

  # --- 두 번째 잡: EC2 서버에 접속해서 배포 ---
  deploy:
    needs: build-and-push # build-and-push 잡이 성공해야만 실행됨
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # === config-server 배포 (포트: 8888) ===
            docker pull minkeon44883/config-server:latest
            docker stop config-server || true
            docker rm config-server || true

            # ⭐️ docker 프로필을 활성화하고, GIT_TOKEN 값을 환경 변수로 컨테이너에 주입합니다.
            docker run -d --name config-server -p 8888:8888 \
              -e SPRING_PROFILES_ACTIVE=docker \
              -e GIT_TOKEN=${{ secrets.GIT_TOKEN }} \
              minkeon44883/config-server:latest

            # === 사용하지 않는 Docker 이미지 정리 ===
            docker image prune -f